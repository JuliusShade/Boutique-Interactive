{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\boutique-interactive\\\\boutique-frontend\\\\src\\\\components\\\\ReportList\\\\ReportList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportList() {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  // Fetch reports from the backend when the component mounts\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  // Function to fetch reports from the backend\n  const fetchReports = async () => {\n    try {\n      const response = await fetch('/api/boutiques/reports');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setReports(data);\n    } catch (error) {\n      console.error('Failed to fetch reports:', error);\n    }\n  };\n\n  // Function to handle checkbox selection\n  const handleCheckboxChange = (event, reportId) => {\n    if (event.target.checked) {\n      setSelectedRows([...selectedRows, reportId]);\n    } else {\n      setSelectedRows(selectedRows.filter(id => id !== reportId));\n    }\n  };\n\n  // Function to delete selected reports\n  const deleteSelectedReports = async () => {\n    try {\n      const response = await fetch('/api/boutiques/deleteReports', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reportIds: selectedRows\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      // Refresh the list of reports after deletion\n      fetchReports();\n      // Clear the selected rows\n      setSelectedRows([]);\n    } catch (error) {\n      console.error('Failed to delete reports:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteSelectedReports,\n      children: \"Delete Selected Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Report ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Report Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reports.map(report => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedRows.includes(report.id),\n              onChange: e => handleCheckboxChange(e, report.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, report.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportList, \"/PS4MUlddHnu+hfyG9TCfdlc9c8=\");\n_c = ReportList;\nexport default ReportList;\nvar _c;\n$RefreshReg$(_c, \"ReportList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReportList","_s","reports","setReports","selectedRows","setSelectedRows","fetchReports","response","fetch","ok","Error","status","data","json","error","console","handleCheckboxChange","event","reportId","target","checked","filter","id","deleteSelectedReports","method","headers","body","JSON","stringify","reportIds","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","report","type","includes","onChange","e","name","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/boutique-interactive/boutique-frontend/src/components/ReportList/ReportList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ReportList() {\r\n  const [reports, setReports] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  // Fetch reports from the backend when the component mounts\r\n  useEffect(() => {\r\n    fetchReports();\r\n  }, []);\r\n\r\n  // Function to fetch reports from the backend\r\n  const fetchReports = async () => {\r\n    try {\r\n      const response = await fetch('/api/boutiques/reports');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setReports(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch reports:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle checkbox selection\r\n  const handleCheckboxChange = (event, reportId) => {\r\n    if (event.target.checked) {\r\n      setSelectedRows([...selectedRows, reportId]);\r\n    } else {\r\n      setSelectedRows(selectedRows.filter((id) => id !== reportId));\r\n    }\r\n  };\r\n\r\n  // Function to delete selected reports\r\n  const deleteSelectedReports = async () => {\r\n    try {\r\n      const response = await fetch('/api/boutiques/deleteReports', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ reportIds: selectedRows }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      // Refresh the list of reports after deletion\r\n      fetchReports();\r\n      // Clear the selected rows\r\n      setSelectedRows([]);\r\n    } catch (error) {\r\n      console.error('Failed to delete reports:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reports List</h2>\r\n      <button onClick={deleteSelectedReports}>Delete Selected Reports</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Select</th>\r\n            <th>Report ID</th>\r\n            <th>Report Name</th>\r\n            {/* Add other columns as needed */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {reports.map((report) => (\r\n            <tr key={report.id}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedRows.includes(report.id)}\r\n                  onChange={(e) => handleCheckboxChange(e, report.id)}\r\n                />\r\n              </td>\r\n              <td>{report.id}</td>\r\n              <td>{report.name}</td>\r\n              {/* Add other columns as needed */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}