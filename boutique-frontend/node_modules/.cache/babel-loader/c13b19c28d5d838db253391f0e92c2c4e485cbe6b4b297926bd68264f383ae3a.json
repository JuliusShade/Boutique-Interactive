{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\boutique-interactive\\\\boutique-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ColumnSelector from './components/ColumnSelector/ColumnSelector';\nimport SortingFiltering from './components/Filter/Filtering';\nimport DataTable from './components/DataTable/DataTable';\nimport SaveReportForm from './components/DataTable/SaveReportForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedColumns, setSelectedColumns] = useState([]);\n\n  // Function to fetch the report data based on selected columns\n  const fetchReportData = async () => {\n    // This would be your actual API call to fetch the report data\n    // For demonstration, it's a placeholder function\n    console.log('Fetching report data for columns: ', selectedColumns);\n    // Placeholder data\n    setReportData({\n      columns: selectedColumns,\n      rows: [\n        // This would be the actual data fetched from the backend\n      ]\n    });\n  };\n\n  // Handle the save report form submission\n  const handleSaveReport = reportName => {\n    // You would save the report to the backend here\n    console.log('Saving report:', reportName, selectedColumns);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Report Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColumnSelector, {\n      selectedColumns: selectedColumns,\n      setSelectedColumns: setSelectedColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortingFiltering\n    // Pass the necessary props or callbacks for sorting and filtering\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchReportData,\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: reportData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveReportForm, {\n      onSave: handleSaveReport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kmV8QJhEsIo++NY7a+c2pmsTPx4=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ColumnSelector","SortingFiltering","DataTable","SaveReportForm","jsxDEV","_jsxDEV","App","_s","selectedColumns","setSelectedColumns","fetchReportData","console","log","setReportData","columns","rows","handleSaveReport","reportName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","reportData","onSave","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/boutique-interactive/boutique-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ColumnSelector from './components/ColumnSelector/ColumnSelector';\nimport SortingFiltering from './components/Filter/Filtering';\nimport DataTable from './components/DataTable/DataTable';\nimport SaveReportForm from './components/DataTable/SaveReportForm';\nimport './App.css';\n\nfunction App() {\n  const [selectedColumns, setSelectedColumns] = useState([]);\n\n  // Function to fetch the report data based on selected columns\n  const fetchReportData = async () => {\n    // This would be your actual API call to fetch the report data\n    // For demonstration, it's a placeholder function\n    console.log('Fetching report data for columns: ', selectedColumns);\n    // Placeholder data\n    setReportData({\n      columns: selectedColumns,\n      rows: [\n        // This would be the actual data fetched from the backend\n      ],\n    });\n  };\n\n  // Handle the save report form submission\n  const handleSaveReport = (reportName) => {\n    // You would save the report to the backend here\n    console.log('Saving report:', reportName, selectedColumns);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Report Builder</h1>\n      <ColumnSelector\n        selectedColumns={selectedColumns}\n        setSelectedColumns={setSelectedColumns}\n      />\n      <SortingFiltering\n        // Pass the necessary props or callbacks for sorting and filtering\n      />\n      <button onClick={fetchReportData}>Generate Report</button>\n      <DataTable data={reportData} />\n      <SaveReportForm onSave={handleSaveReport} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEJ,eAAe,CAAC;IAClE;IACAK,aAAa,CAAC;MACZC,OAAO,EAAEN,eAAe;MACxBO,IAAI,EAAE;QACJ;MAAA;IAEJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACvC;IACAN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,UAAU,EAAET,eAAe,CAAC;EAC5D,CAAC;EAED,oBACEH,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BlB,OAAA,CAACL,cAAc;MACbQ,eAAe,EAAEA,eAAgB;MACjCC,kBAAkB,EAAEA;IAAmB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFlB,OAAA,CAACJ;IACC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACFlB,OAAA;MAAQmB,OAAO,EAAEd,eAAgB;MAAAS,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DlB,OAAA,CAACH,SAAS;MAACuB,IAAI,EAAEC;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BlB,OAAA,CAACF,cAAc;MAACwB,MAAM,EAAEX;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAChB,EAAA,CAtCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAsCX;AAED,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}